{
    "meta:license": [
        "Copyright 2018 Adobe. All rights reserved.",
        "This file is licensed to you under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License. You may obtain a copy",
        "of the License at http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software distributed under",
        "the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS",
        "OF ANY KIND, either express or implied. See the License for the specific language",
        "governing permissions and limitations under the License."
    ],
    "$id": "https://ns.adobe.com/helix/pipeline/mdast",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "title": "MDAST",
    "meta:status": "stable",
    "description": "The Markdown AST is 100% API compatible with the [UnifiedJS MDAST](https://github.com/syntax-tree/mdast) data structure.\n\nAll [MDAST Utilities](https://github.com/syntax-tree/mdast#list-of-utilities) are compatible and can be used for easy processing of MDAST trees.",
    "additionalProperties": false,
    "properties": {
        "type": {
            "enum": [
                "root",
                "paragraph",
                "text",
                "heading",
                "thematicBreak",
                "blockquote",
                "list",
                "table",
                "tableRow",
                "tableCell",
                "html",
                "code",
                "yaml",
                "definition",
                "footnoteDefinition",
                "emphasis",
                "strong",
                "delete",
                "inlineCode",
                "break",
                "link",
                "image",
                "linkReference",
                "imageReference",
                "footnote",
                "footnoteReference"
            ],
            "description": "The node type of the MDAST node"
        },
        "children": {
            "type": "array",
            "items": {
                "$ref": "https://ns.adobe.com/helix/pipeline/mdast"
            }
        },
        "position": {
            "$ref": "https://ns.adobe.com/helix/pipeline/position"
        },
        "value": {
            "type": "string",
            "description": "The string value of the node, if it is a terminal node."
        },
        "depth": {
            "type": "integer",
            "minimum": 1,
            "maximum": 6,
            "description": "The heading level"
        },
        "ordered": {
            "type": "boolean",
            "description": "Is the list ordered"
        },
        "start": {
            "type": "integer",
            "description": "Starting item of the list"
        },
        "loose": {
            "type": "boolean",
            "description": "A loose field can be present. It represents that any of its items is separated by a blank line from its siblings or contains two or more children (when true), or not (when false or not present)."
        },
        "checked": {
            "type": "boolean",
            "description": "A checked field can be present. It represents whether the item is done (when true), not done (when false), or indeterminate or not applicable (when null or not present)."
        },
        "align": {
            "description": "For tables, an align field can be present. If present, it must be a list of alignTypes. It represents how cells in columns are aligned.",
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "left",
                    "right",
                    "center",
                    null
                ]
            }
        },
        "lang": {
            "type": "string",
            "description": "For code, a lang field can be present. It represents the language of computer code being marked up."
        },
        "meta": {
            "type": "string",
            "description": "For code, if lang is present, a meta field can be present. It represents custom information relating to the node."
        },
        "identifier": {
            "type": "string",
            "description": "For associations, an identifier field must be present. It can match an identifier field on another node."
        },
        "label": {
            "type": "string",
            "description": "For associations, a label field can be present. It represents the original value of the normalised identifier field."
        },
        "url": {
            "type": "string",
            "format": "uri-reference",
            "description": "For resources, an url field must be present. It represents a URL to the referenced resource."
        },
        "title": {
            "type": [
                "string",
                "null"
            ],
            "description": "For resources, a title field can be present. It represents advisory information for the resource, such as would be appropriate for a tooltip."
        },
        "alt": {
            "type": [
                "string",
                "null"
            ],
            "description": "An alt field should be present. It represents equivalent content for environments that cannot represent the node as intended."
        }
    }
}